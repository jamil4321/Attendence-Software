{"version":3,"sources":["Components/dialog/dialog.js","Components/auth/signin.js","Components/auth/signup.js","Components/dialog/DialogForm.js","Components/setting/AddStudent.js","socket/socket.js","Components/viewStudentsLogs/viewStudentsLogs.js","Components/Chart/CountStudents.js","Components/attendence/ViewAttendance.js","Components/home.js","App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["AlertDialog","props","console","log","React","useState","open","setOpen","handleClose","close","useEffect","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","message","DialogActions","Button","onClick","color","autoFocus","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","email","setEmail","password","setPassword","setMessage","dispatch","useDispatch","submitSignin","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","err","type","payload","localStorage","setItem","asscessToken","user","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","TextField","required","fullWidth","label","name","autoComplete","value","onChange","target","FormControlLabel","control","Checkbox","Grid","container","item","Link","href","root","SignUp","setName","confirm","setConfirm","onSubmitSignup","xs","justify","formControl","selectEmpty","DialogForm","classRoomName","setClassRoomName","studentName","setStudentName","selectClassRoom","useSelector","state","accessToken","classRoom","addClassRoom","Authorization","alert","addStudent","extendedIcon","marginRight","table","minWidth","AddStudent","students","getAllStudent","func","deleteStudent","style","justifyContent","alignContent","height","Fab","aria-label","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","length","map","i","scope","socket","io","ViewStudentsLogs","Date","startDate","setStartDate","endDate","setEndDate","DateHead","setDateHead","setButtonCliked","row","setRows","page","setPage","rowsPerPage","setRowsPerPage","studentsLogs","getLogs","Socket","on","date1","diffrentTime","getTime","days","date","setDate","getDate","newDateHead","push","getMonth","getFullYear","updateRows","lowercasedValue","toLowerCase","trim","filteredData","filter","Object","keys","some","key","includes","toString","filterData","utils","DateFnsUtils","format","KeyboardButtonProps","sm","md","padding","slice","r","timeDate","split","time","timeZone","String","Number","hover","role","tabIndex","studentId","camera","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","CountStudents","background","filterStudent","Card","textAlign","CardContent","gutterBottom","start","end","duration","separator","CountPresentStudent","attendence","dataCount","att","date2","attDate","check","isSameDayfunc","CountAbsentStudent","PresentToday","Students","ListItem","button","ListItemText","primary","AbsentToday","newStudents","overflow","ViewAttendance","setSelectClassRoom","getAttendence","isSameDay","d1","d2","FormControl","InputLabel","Select","labelId","MenuItem","drawerWidth","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","Home","useTheme","drawerItem","setDrawerItem","AppBar","position","clsx","Toolbar","IconButton","edge","noWrap","Drawer","anchor","direction","Divider","List","ListItemIcon","App","socketCon","emit","getUSERJSON","getItem","getAccessToken","userObject","parse","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Reducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbf0a0c0.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function AlertDialog(props) {\n  console.log(props);\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    props.close();\n    setOpen(false);\n  };\n  React.useEffect(() => {\n    props.open ? setOpen(true) : setOpen(false);\n  });\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {/* {\"Use Google's location service?\"} */}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch } from \"react-redux\";\nimport Dialog from \"../dialog/dialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignIn = () => {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const handldialog = () => {\n    setOpen(false);\n  };\n  const dispatch = useDispatch();\n\n  const submitSignin = async (e) => {\n    e.preventDefault();\n    if (email !== \"\" && password !== \"\") {\n      let data = await fetch(\"http://localhost:2000/api/signin\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      })\n        .then((res) => res.json())\n        .then((data) => data)\n        .catch((err) => err);\n      if (data && data.message === \"Matched\") {\n        console.log(data);\n        dispatch({ type: \"SIGNIN\", payload: data });\n        localStorage.setItem(\"auth\", data.asscessToken);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n      } else {\n        setMessage(data.message);\n        setOpen(true);\n      }\n      setEmail(\"\");\n      setPassword(\"\");\n    } else {\n      setMessage(\"All Feild Are Required\");\n      setOpen(true);\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={(e) => submitSignin(e)}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Dialog open={open} message={message} close={handldialog} />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Dialog from \"../dialog/dialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst SignUp = () => {\n  const [name, setName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [confirm, setConfirm] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState(\"\");\n\n  const classes = useStyles();\n  const handldialog = () => {\n    setOpen(false);\n  };\n\n  const onSubmitSignup = async (e) => {\n    e.preventDefault();\n    if (name !== \"\" && email !== \"\" && password !== \"\" && confirm !== \"\") {\n      if (password === confirm) {\n        let body = {\n          email,\n          name,\n          password,\n        };\n        let data = await fetch(\"http://127.0.0.1:2000/api/signup\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        })\n          .then((res) => res.json())\n          .then((data) => data)\n          .catch((err) => err);\n        console.log(\"data\", data);\n        setMessage(data.message);\n        setOpen(true);\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirm(\"\");\n      } else {\n        setMessage(\"Password is not Matched\");\n        setOpen(true);\n      }\n    } else {\n      setMessage(\"All Feild Are Required\");\n      setOpen(true);\n    }\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => onSubmitSignup(e)}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirm Password\"\n                  label=\"confrim Password\"\n                  type=\"password\"\n                  id=\"confirm\"\n                  autoComplete=\"current-password\"\n                  value={confirm}\n                  onChange={(e) => setConfirm(e.target.value)}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Dialog open={open} message={message} close={handldialog} />\n      </Container>\n    </>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nconst DialogForm = (props) => {\n  const classes = useStyles();\n  const [classRoomName, setClassRoomName] = React.useState(\"\");\n  const [studentName, setStudentName] = React.useState(\"\");\n  const [selectClassRoom, setSelectClassRoom] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    props.close();\n    setOpen(false);\n  };\n  const dispatch = useDispatch();\n  const { accessToken, classRoom } = useSelector((state) => {\n    return {\n      accessToken: state.accessToken,\n      classRoom: state.classRoom,\n    };\n  });\n  React.useEffect(() => {\n    props.open ? setOpen(true) : setOpen(false);\n  });\n  // React.useEffect(() => {\n  //   const func = async () => {\n  //     await getClassRooms();\n  //   };\n  //   func();\n  // }, []);\n  // console.log(classRoom);\n\n  // const getClassRooms = async () => {\n  //   let data = await fetch(\"http://localhost:2000/api/getAllClassRoom\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: \"Bearer \" + accessToken,\n  //     },\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => data)\n  //     .catch((err) => console.log(err));\n  //   console.log(data);\n  //   dispatch({ type: \"GETCLASSROOM\", payload: data });\n  // };\n  const addClassRoom = async (e) => {\n    console.log(\"Clicked\");\n    e.preventDefault();\n    if (classRoomName !== \"\") {\n      let data = await fetch(\"http://localhost:2000/api/newClassRoom\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + accessToken,\n        },\n        body: JSON.stringify({ classRoomName }),\n      })\n        .then((res) => res.json())\n        .then((data) => data)\n        .catch((err) => console.log(err));\n\n      if (data && data.message === \"Class Room Added SuccessFully\") {\n        dispatch({ type: \"ADDCLASSROOM\", payload: data });\n        handleClose();\n      } else {\n        handleClose();\n        alert(data.message);\n      }\n    }\n  };\n  const addStudent = async (e) => {\n    console.log(\"Clicked\");\n    e.preventDefault();\n    if (studentName !== \"\") {\n      let data = await fetch(\"http://localhost:2000/api/newStudent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + accessToken,\n        },\n        body: JSON.stringify({ name: studentName, classRoom: selectClassRoom }),\n      })\n        .then((res) => res.json())\n        .then((data) => data)\n        .catch((err) => console.log(err));\n      if (data && data.message === \"Student Added\") {\n        dispatch({ type: \"ADDSTUDENT\", payload: data });\n        handleClose();\n        // setClassRoomName(\"\");\n        setStudentName(\"\");\n      } else {\n        handleClose();\n        alert(data.message);\n      }\n    }\n  };\n  return (\n    <>\n      {(props.variant === \"classRoom\" && (\n        <form>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Add ClassRoom</DialogTitle>\n            <DialogContent>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"ClassRoom\"\n                label=\"Add Class Room\"\n                name=\"Add Class Room\"\n                value={classRoomName}\n                onChange={(e) => setClassRoomName(e.target.value)}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => addClassRoom(e)}\n              >\n                Add Class Room\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </form>\n      )) ||\n        (props.variant === \"students\" && (\n          <form>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">Add Student</DialogTitle>\n              <DialogContent>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"Add Student\"\n                  label=\"Add Student\"\n                  name=\"Add Student\"\n                  value={studentName}\n                  onChange={(e) => setStudentName(e.target.value)}\n                />\n                {/* <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Select Class Room\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={selectClassRoom}\n                    onChange={(e) => setSelectClassRoom(e.target.value)}\n                    label=\"Select Class Room\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    {classRoom.length > 0\n                      ? classRoom.map((data) => (\n                          <MenuItem key={data.id} value={data.classRoomName}>\n                            {data.classRoomName}\n                          </MenuItem>\n                        ))\n                      : null}\n                  </Select>\n                </FormControl> */}\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={(e) => addStudent(e)}\n                >\n                  Add Students\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </form>\n        ))}\n    </>\n  );\n};\n\nexport default DialogForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DialogFrom from \"../dialog/DialogForm\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nconst AddStudent = () => {\n  const dispatch = useDispatch();\n  const { accessToken, students } = useSelector((state) => {\n    return {\n      accessToken: state.accessToken,\n      students: state.students,\n    };\n  });\n  React.useEffect(() => {\n    const func = async () => {\n      await getAllStudent();\n    };\n    func();\n  }, []);\n\n  const getAllStudent = async () => {\n    let data = await fetch(\"http://localhost:2000/api/getAllStudents\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data)\n      .catch((err) => console.log(err));\n    console.log(data);\n    dispatch({ type: \"GETSTUDENT\", payload: data });\n  };\n  console.log(students);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handldialog = () => {\n    setOpen(false);\n  };\n  const deleteStudent = async (id) => {\n    let data = await fetch(\"http://localhost:2000/api/deleteStudent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n      },\n      body: JSON.stringify({ id }),\n    })\n      .then((res) => res.json())\n      .then((data) => data)\n      .catch((err) => console.log(err));\n    console.log(data);\n    if (data.message !== \"Student Deleted\") {\n      alert(data.message);\n    }\n    dispatch({ type: \"DELETEDATA\", payload: id });\n  };\n  return (\n    <div\n      className={classes.root}\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignContent: \"flex-end\",\n        height: \"80vh\",\n      }}\n    >\n      <div>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={() => setOpen(true)}>\n          <AddIcon />\n        </Fab>\n      </div>\n      <DialogFrom variant=\"students\" open={open} close={handldialog} />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Sr No.</TableCell>\n              {/* <TableCell>Student Picture</TableCell> */}\n              <TableCell>Student Name</TableCell>\n              <TableCell align=\"right\">Action Button</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {students.length > 0\n              ? students.map((data, i) => {\n                  return (\n                    <TableRow key={data.id}>\n                      <TableCell>{i + 1}</TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {data.studentName}\n                      </TableCell>\n\n                      <TableCell align=\"right\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => deleteStudent(data.id)}\n                        >\n                          Delete\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })\n              : null}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default AddStudent;\n","import React from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://127.0.0.1:2000/\");\n\nexport default socket;\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Grid,\r\n  TablePagination,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Socket from \"../../socket/socket\";\r\nconst ViewStudentsLogs = () => {\r\n  const [startDate, setStartDate] = React.useState(new Date());\r\n  const [endDate, setEndDate] = React.useState(new Date());\r\n  const [studentName, setStudentName] = React.useState(\"\");\r\n  const [DateHead, setDateHead] = React.useState([]);\r\n  const [buttonCliked, setButtonCliked] = React.useState(false);\r\n  const [row, setRows] = React.useState([]);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const { studentsLogs, accessToken } = useSelector((state) => {\r\n    return {\r\n      studentsLogs: state.studentsLogs,\r\n      accessToken: state.accessToken,\r\n    };\r\n  });\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      await getLogs();\r\n    };\r\n    func();\r\n  }, []);\r\n  useEffect(() => {\r\n    Socket.on(\"Attendence Maked\", async () => {\r\n      await getLogs();\r\n    });\r\n  }, []);\r\n  const getLogs = async () => {\r\n    if (endDate >= startDate) {\r\n      let date1 = startDate;\r\n      let date2 = endDate;\r\n      let diffrentTime = date2.getTime() - date1.getTime();\r\n      let days = diffrentTime / (1000 * 3600 * 24);\r\n      console.log(days);\r\n      setDateHead([]);\r\n      for (let i = 0; i < days + 1; i++) {\r\n        let date = new Date(\r\n          new Date(startDate).setDate(new Date(startDate).getDate() + i)\r\n        );\r\n        let newDateHead = DateHead;\r\n        await newDateHead.push(\r\n          <TableCell align=\"right\" key={i}>\r\n            {date.getDate()}-{date.getMonth() + 1}-{date.getFullYear()}\r\n          </TableCell>\r\n        );\r\n        await setDateHead(newDateHead);\r\n      }\r\n      console.log(endDate, startDate);\r\n      let data = await fetch(\"http://localhost:2000/api/ViewStudentsLogs\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + accessToken,\r\n        },\r\n        body: JSON.stringify({ startDate, endDate }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => data)\r\n        .catch((err) => console.log(err));\r\n      console.log(data);\r\n      if (data) {\r\n        dispatch({ type: \"GETALLLOGS\", payload: data });\r\n        setRows(data.data);\r\n      }\r\n      setButtonCliked(true);\r\n    }\r\n  };\r\n\r\n  const filterData = (value) => {\r\n    const lowercasedValue = value.toLowerCase().trim();\r\n    console.log(\"value\", lowercasedValue);\r\n    if (lowercasedValue === \"\") setRows(studentsLogs);\r\n    else {\r\n      const filteredData = studentsLogs.filter((item) => {\r\n        return Object.keys(item).some((key) =>\r\n          studentsLogs.includes(key)\r\n            ? false\r\n            : item[key].toString().toLowerCase().includes(lowercasedValue)\r\n        );\r\n      });\r\n      console.log(filteredData);\r\n      setRows(filteredData);\r\n    }\r\n  };\r\n\r\n  const updateRows = (value) => {\r\n    setStudentName(value);\r\n    filterData(value);\r\n  };\r\n  console.log(row, \"row\");\r\n  return (\r\n    <>\r\n      <Paper style={{ margin: 10 }}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container justify=\"space-around\" alignItems=\"center\">\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"date-picker-dialog\"\r\n              label=\"Date picker dialog\"\r\n              format=\"yyyy/MM/dd\"\r\n              value={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"date-picker-dialog\"\r\n              label=\"Date picker dialog\"\r\n              format=\"yyyy/MM/dd\"\r\n              value={endDate}\r\n              onChange={(date) => setEndDate(date)}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={getLogs}\r\n              >\r\n                Show Data\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n      </Paper>\r\n      <Paper>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={6}></Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <div style={{ padding: 10 }}>\r\n              <TextField\r\n                value={studentName}\r\n                onChange={(e) => updateRows(e.target.value)}\r\n                id=\"outlined-basic\"\r\n                label=\"Student Name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Sr No.</TableCell>\r\n                <TableCell>Student Id</TableCell>\r\n                <TableCell>Student Name</TableCell>\r\n                <TableCell>Camera</TableCell>\r\n                <TableCell>Time</TableCell>\r\n                <TableCell>Date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {row.length > 0 &&\r\n                row\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((r, i) => {\r\n                    let date = r.timeDate.split(\"T\")[0];\r\n                    let time = r.timeDate.split(\"T\")[1].split(\".\")[0];\r\n                    let timeZone = `${String(Number(time.split(\":\")[0]) + 5)}:${\r\n                      time.split(\":\")[1]\r\n                    }`;\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={r.id}>\r\n                        <TableCell>\r\n                          <Typography>{i + 1}</Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography>{r.studentId}</Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography>{r.studentName}</Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography>{r.camera}</Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography>{timeZone}</Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography>{date}</Typography>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={row.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewStudentsLogs;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport Countup from \"react-countup\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 400,\n    maxWidth: 300,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport const CountStudents = (props) => {\n  const { students } = useSelector((state) => {\n    return {\n      students: state.students,\n    };\n  });\n  const filterStudent = students.filter((data) => {\n    if (props.classRoom === \"All\") {\n      return data;\n    } else if (data.classRoom === props.classRoom) {\n      return data;\n    }\n  });\n  return (\n    <Card style={{ textAlign: \"center\" }}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Total Students\n        </Typography>\n        <Typography variant=\"h5\">\n          <Countup\n            start={0}\n            end={filterStudent.length}\n            duration={2.5}\n            separator=\",\"\n          />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const CountPresentStudent = (props) => {\n  const { students, attendence } = useSelector((state) => {\n    return {\n      students: state.students,\n      attendence: state.attendence,\n    };\n  });\n  let dataCount = 0;\n\n  console.log(\"attendence count\", attendence);\n  const filterStudent = students.filter((data) => {\n    attendence.map((att) => {\n      let date1 = props.startDate;\n      let date2 = props.endDate;\n      console.log(date1, date2);\n      let diffrentTime = date2.getTime() - date1.getTime();\n      let days = diffrentTime / (1000 * 3600 * 24) + 1;\n      for (let i = 0; i < days; i++) {\n        let date = new Date(\n          new Date(date1).setDate(new Date(date1).getDate() + i)\n        );\n        let attDate = new Date(att.timeDate.split(\"T\")[0]);\n        console.log(attDate, \"attendence Date\");\n        let check = props.isSameDayfunc(attDate, date);\n        console.log(check);\n        if (check === true) {\n          if (data.id === att.studentId) {\n            dataCount = dataCount + 1;\n            console.log(dataCount);\n          }\n        }\n      }\n    });\n    // console.log(dataReturn);\n  });\n  console.log(filterStudent, \"filter present\", dataCount);\n  return (\n    <Card style={{ textAlign: \"center\" }}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {props.classRoom === \"All\"\n            ? \"Total Student Present in University\"\n            : \"Total Student Present in ClassRoom\"}\n        </Typography>\n        <Typography variant=\"h5\">\n          <Countup start={0} end={dataCount} duration={2.5} separator=\",\" />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const CountAbsentStudent = (props) => {\n  const { students, attendence } = useSelector((state) => {\n    return {\n      students: state.students,\n      attendence: state.attendence,\n    };\n  });\n  let dataCount = 0;\n  console.log(\"Absent count\", attendence);\n  const filterStudent = students.filter((data) => {\n    attendence.map((att) => {\n      let date1 = props.startDate;\n      let date2 = props.endDate;\n      let diffrentTime = date2.getTime() - date1.getTime();\n      let days = diffrentTime / (1000 * 3600 * 24);\n      console.log(days, \"days\");\n      for (let i = 0; i < days + 1; i++) {\n        let date = new Date(\n          new Date(date1).setDate(new Date(date1).getDate() + i)\n        );\n        let attDate = new Date(att.timeDate.split(\"T\")[0]);\n        let check = props.isSameDayfunc(attDate, date);\n        if (check === true) {\n          console.log(data.id, att.studentId);\n          if (data.id !== att.studentId) {\n            dataCount = dataCount + 1;\n          }\n        }\n      }\n    });\n    // console.log(dataReturn);\n    // return dataReturn;\n  });\n  console.log(filterStudent, \"filter Absent in University\", dataCount);\n  return (\n    <Card style={{ textAlign: \"center\" }}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {props.classRoom === \"All\"\n            ? \"Total Student Absent in University\"\n            : \"Total Student Absent in ClassRoom\"}\n        </Typography>\n        <Typography variant=\"h5\">\n          <Countup\n            start={0}\n            end={dataCount === 0 ? 0 : students.length - dataCount}\n            duration={2.5}\n            separator=\",\"\n          />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const MostPresentsInUniversity = (props) => {\n  const { students, attendence } = useSelector((state) => {\n    return {\n      students: state.students,\n      attendence: state.attendence,\n    };\n  });\n  let studentName = [];\n  if (props.classRoom === \"All\") {\n    studentName = [\n      ...attendence\n        .reduce((mp, o) => {\n          if (!mp.has(o.studentId))\n            mp.set(o.studentId, {\n              ...o,\n              count: 0,\n            });\n          mp.get(o.studentId).count++;\n          return mp;\n        }, new Map())\n        .values(),\n    ];\n  }\n  console.log(\"attendence count\", attendence);\n  console.log(\"filter\", studentName);\n  studentName\n    .sort(function (a, b) {\n      return b.count - a.count;\n    })\n    .slice(0, 4);\n  console.logs(studentName);\n  return (\n    <Card style={{ textAlign: \"center\" }}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {props.classRoom === \"All\"\n            ? \"Most Present in University\"\n            : \"Most Present in ClassRoom\"}\n        </Typography>\n        {studentName.length > 0 && (\n          <Doughnut\n            data={{\n              labels: studentName.map((data) => data.studenName),\n              datasets: [\n                {\n                  data: studentName.map((data) => data.count),\n                  backgroundColor: [\n                    \"#FF8C00\",\n                    \"green\",\n                    \"red\",\n                    \"#BDB76B\",\n                    \"#2E8B57\",\n                    \"#4682B4\",\n                    \"#00008B\",\n                    \"#DEB887\",\n                  ],\n                  hoverBackgroundColor: [\n                    \"#FFA500\",\n                    \"lightgreen\",\n                    \"#FF7F7F\",\n                    \"#F0E68C\",\n                    \"#3CB371\",\n                    \"#B0C4DE\",\n                    \"#0000CD\",\n                    \"#F5DEB3\",\n                  ],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n            }}\n          />\n        )}\n        {/* <Countup\n          start={0}\n          end={studentName.length}\n          duration={2.5}\n          separator=\",\"\n        /> */}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const MostAbsentInUniversity = (props) => {\n  let date1 = props.startDate;\n  let date2 = props.endDate;\n  let diffrentTime = date2.getTime() - date1.getTime();\n  let days = diffrentTime / (1000 * 3600 * 24);\n  const { students, attendence } = useSelector((state) => {\n    return {\n      students: state.students,\n      attendence: state.attendence,\n    };\n  });\n  let studentName = [];\n  if (props.classRoom === \"All\") {\n    studentName = [\n      ...attendence\n        .reduce((mp, o) => {\n          if (!mp.has(o.studentId))\n            mp.set(o.studentId, {\n              ...o,\n              count: 0,\n            });\n          mp.get(o.studentId).count++;\n          return mp;\n        }, new Map())\n        .values(),\n    ];\n  } else {\n    let filterByClassRoom = attendence.filter((att) =>\n      att.classRoom === props.classRoom ? att : null\n    );\n    studentName = [\n      ...filterByClassRoom\n        .reduce((mp, o) => {\n          if (!mp.has(o.studentId))\n            mp.set(o.studentId, {\n              ...o,\n              count: 0,\n            });\n          mp.get(o.studentId).count++;\n          return mp;\n        }, new Map())\n        .values(),\n    ];\n  }\n  let absentStudents = [];\n  const absentStudent = students.map((std) => {\n    studentName.map((names) => {\n      if (std.id === names.studentId) {\n        let data = {\n          ...names,\n          count: Math.floor(days) - names.count,\n        };\n        absentStudents.push(data);\n      }\n    });\n  });\n  console.log(absentStudents, \"Absent\");\n  return (\n    <Card style={{ textAlign: \"center\" }}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {props.classRoom === \"All\"\n            ? \"Most Absent in University\"\n            : \"Most Absent in ClassRoom\"}\n        </Typography>\n        {studentName.length > 0 && (\n          <Doughnut\n            data={{\n              labels: absentStudents.map(\n                (data) => data.studenName || data.name\n              ),\n              datasets: [\n                {\n                  data: absentStudents.map((data) => data.count),\n                  backgroundColor: [\n                    \"#FF8C00\",\n                    \"green\",\n                    \"red\",\n                    \"#BDB76B\",\n                    \"#2E8B57\",\n                    \"#4682B4\",\n                    \"#00008B\",\n                    \"#DEB887\",\n                  ],\n                  hoverBackgroundColor: [\n                    \"#FFA500\",\n                    \"lightgreen\",\n                    \"#FF7F7F\",\n                    \"#F0E68C\",\n                    \"#3CB371\",\n                    \"#B0C4DE\",\n                    \"#0000CD\",\n                    \"#F5DEB3\",\n                  ],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n            }}\n          />\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const PresentToday = (props) => {\n  const { students, attendence } = useSelector((state) => {\n    return {\n      students: state.students,\n      attendence: state.attendence,\n    };\n  });\n  let Students = [];\n  console.log(\"attendence count\", attendence);\n  students.filter((data) => {\n    attendence.map((att) => {\n      let attDate = new Date(att.timeDate.split(\"T\")[0]);\n      let check = props.isSameDayfunc(attDate, new Date());\n      if (check === true) {\n        if (props.classRoom === \"All\") {\n          if (data.id === att.studentId) {\n            Students.push(att);\n          }\n        } else if (\n          props.classRoom === data.classRoom &&\n          data.id === att.studentId\n        ) {\n          Students.push(att);\n        }\n      }\n    });\n  });\n  console.log(Students, \"filter most Present\");\n  return (\n    <>\n      <Card style={{ textAlign: \"center\" }}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            {props.classRoom === \"All\"\n              ? \"Students Present Today in University\"\n              : \"Students Present Today in ClassRoom\"}\n          </Typography>\n          {Students.map((data, i) => (\n            <ListItem button>\n              <ListItemText\n                primary={`${i + 1} ${data.studentName}`}\n                key={data.studentId}\n              />\n            </ListItem>\n          ))}\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport const AbsentToday = (props) => {\n  const { students, attendence } = useSelector((state) => {\n    return {\n      students: state.students,\n      attendence: state.attendence,\n    };\n  });\n  let Students = [];\n  let newStudents = [];\n  console.log(\"attendence count\", attendence);\n  students.filter((data) => {\n    if (attendence.length > 0) {\n      attendence.map((att) => {\n        let attDate = new Date(att.timeDate.split(\"T\")[0]);\n        let check = props.isSameDayfunc(attDate, new Date());\n        if (check === true) {\n          if (att.studentId !== data.id) {\n            console.log(data);\n            newStudents.push(data);\n          }\n        }\n      });\n    } else {\n      newStudents.push(data);\n    }\n  });\n  console.log(newStudents, \"filter abcent today\");\n  return (\n    <>\n      <Card style={{ textAlign: \"center\" }}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            {props.classRoom === \"All\"\n              ? \"Students Abcent Today in University\"\n              : \"Students Present Today in ClassRoom\"}\n          </Typography>\n          {students.length !== newStudents.length &&\n            newStudents.map((data, i) => (\n              <ListItem button>\n                <ListItemText\n                  primary={`${i + 1} ${data.studentName}`}\n                  key={data.id}\n                />\n              </ListItem>\n            ))}\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n","import \"date-fns\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Socket from \"../../socket/socket\";\nimport {\n  CountStudents,\n  CountPresentStudent,\n  CountAbsentStudent,\n  PresentToday,\n  AbsentToday,\n} from \"../Chart/CountStudents\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  table: {\n    width: \"95vw\",\n    height: \"80vh\",\n    overflow: \"scroll\",\n    minWidth: 650,\n  },\n}));\n\nconst ViewAttendance = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [selectClassRoom, setSelectClassRoom] = React.useState(\"All\");\n  const [DateHead, setDateHead] = React.useState([]);\n  const [buttonCliked, setButtonCliked] = React.useState(false);\n  const { classRoom, attendence, accessToken, students } = useSelector(\n    (state) => {\n      return {\n        classRoom: state.classRoom,\n        attendence: state.attendence,\n        students: state.students,\n        accessToken: state.accessToken,\n      };\n    }\n  );\n\n  React.useEffect(() => {\n    const func = async () => {\n      await getAttendence();\n    };\n    func();\n  }, []);\n  React.useEffect(() => {\n    Socket.on(\"Attendence Maked\", async () => {\n      await getAttendence();\n    });\n  }, []);\n  const getAttendence = async () => {\n    if (endDate >= startDate) {\n      let date1 = startDate;\n      let date2 = endDate;\n      let diffrentTime = date2.getTime() - date1.getTime();\n      let days = diffrentTime / (1000 * 3600 * 24);\n      console.log(days);\n      setDateHead([]);\n      for (let i = 0; i < days + 1; i++) {\n        let date = new Date(\n          new Date(startDate).setDate(new Date(startDate).getDate() + i)\n        );\n        let newDateHead = DateHead;\n        await newDateHead.push(\n          <TableCell align=\"right\" key={i}>\n            {date.getDate()}-{date.getMonth() + 1}-{date.getFullYear()}\n          </TableCell>\n        );\n        await setDateHead(newDateHead);\n      }\n      console.log(endDate, startDate);\n      let data = await fetch(\"http://localhost:2000/api/getattendence\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + accessToken,\n        },\n        body: JSON.stringify({ startDate, endDate }),\n      })\n        .then((res) => res.json())\n        .then((data) => data)\n        .catch((err) => console.log(err));\n      console.log(data);\n      if (data) dispatch({ type: \"GETATTENDENCE\", payload: data });\n      setButtonCliked(true);\n    }\n  };\n  const isSameDay = (d1, d2) => {\n    return (\n      d1.getFullYear() === d2.getFullYear() &&\n      d1.getDate() === d2.getDate() &&\n      d1.getMonth() === d2.getMonth()\n    );\n  };\n  console.log(attendence, \"attendence\");\n  return (\n    <div>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid container justify=\"space-around\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={3}>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Select Class Room\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={selectClassRoom}\n                onChange={(e) => setSelectClassRoom(e.target.value)}\n                label=\"Select Class Room\"\n              >\n                <MenuItem value=\"All\">---All---</MenuItem>\n                {classRoom.length > 0\n                  ? classRoom.map((data) => (\n                      <MenuItem key={data.id} value={data.classRoomName}>\n                        {data.classRoomName}\n                      </MenuItem>\n                    ))\n                  : null}\n              </Select>\n            </FormControl>\n          </Grid>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Date picker dialog\"\n            format=\"yyyy/MM/dd\"\n            value={startDate}\n            onChange={(date) => setStartDate(date)}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Date picker dialog\"\n            format=\"yyyy/MM/dd\"\n            value={endDate}\n            onChange={(date) => setEndDate(date)}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n          <Grid item xs={12} sm={6} md={3}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={getAttendence}\n            >\n              Show Data\n            </Button>\n          </Grid>\n        </Grid>\n      </MuiPickersUtilsProvider>\n      <div style={{ marginTop: 30 }}>\n        <Grid container spacing={3} justify=\"center\">\n          <Grid item xs={12} sm={6} md={4}>\n            <CountStudents classRoom={selectClassRoom} />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <CountPresentStudent\n              classRoom={selectClassRoom}\n              startDate={startDate}\n              endDate={endDate}\n              isSameDayfunc={isSameDay}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <CountAbsentStudent\n              classRoom={selectClassRoom}\n              startDate={startDate}\n              endDate={endDate}\n              isSameDayfunc={isSameDay}\n            />\n          </Grid>\n          {/* <Grid item xs={12} sm={12} md={5}>\n            {endDate > startDate && buttonCliked === true ? (\n              <MostPresentsInUniversity\n                classRoom={selectClassRoom}\n                startDate={startDate}\n                endDate={endDate}\n                isSameDayfunc={isSameDay}\n              />\n            ) : null}\n          </Grid> */}\n          {/* <Grid item xs={12} sm={12} md={5}>\n            {endDate > startDate && buttonCliked === true ? (\n              <MostAbsentInUniversity\n                classRoom={selectClassRoom}\n                startDate={startDate}\n                endDate={endDate}\n                isSameDayfunc={isSameDay}\n              />\n            ) : null}\n          </Grid> */}\n          <Grid item xs={12} sm={12} md={5}>\n            <PresentToday\n              classRoom={selectClassRoom}\n              startDate={startDate}\n              endDate={endDate}\n              isSameDayfunc={isSameDay}\n              style={{ height: \"50vh\", overflow: \"scroll\" }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={5}>\n            <AbsentToday\n              classRoom={selectClassRoom}\n              startDate={startDate}\n              endDate={endDate}\n              style={{ height: \"50vh\", overflow: \"scroll\" }}\n              isSameDayfunc={isSameDay}\n            />\n          </Grid>\n        </Grid>\n        {/* <TableContainer component={Paper} className={classes.table}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Sr No.</TableCell>\n                <TableCell>Student Name</TableCell>\n                {DateHead.length > 0 ? DateHead.map((data) => data) : null}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {attendence.length > 0\n                ? attendence.map((data, i) => {\n                    console.log(data);\n                    if (selectClassRoom === \"All\") {\n                      let att = [];\n                      let date1 = startDate;\n                      let date2 = endDate;\n                      let diffrentTime = date2.getTime() - date1.getTime();\n                      let days = diffrentTime / (1000 * 3600 * 24);\n                      for (let i = 0; i < days + 1; i++) {\n                        let date = new Date(\n                          new Date(startDate).setDate(\n                            new Date(startDate).getDate() + i\n                          )\n                        );\n                        let check = isSameDay(new Date(data.wdate), date);\n                        if (check === true) {\n                          att.push(\n                            <TableCell\n                              style={{\n                                background: \"green\",\n                                color: \"white\",\n                                textAlign: \"center\",\n                              }}\n                            >\n                              P\n                            </TableCell>\n                          );\n                        } else {\n                          att.push(\n                            <TableCell\n                              style={{\n                                background: \"red\",\n                                color: \"white\",\n                                textAlign: \"center\",\n                              }}\n                            >\n                              A\n                            </TableCell>\n                          );\n                        }\n                      }\n                      return (\n                        <TableRow>\n                          <TableCell>{i + 1}</TableCell>\n                          <TableCell>{data.studenName}</TableCell>\n                          {att.length > 0 ? att.map((at) => at) : null}\n                        </TableRow>\n                      );\n                    }\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </TableContainer> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewAttendance;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport AddStudent from \"./setting/AddStudent\";\nimport ViewStudentsLogs from \"./viewStudentsLogs/viewStudentsLogs\";\nimport ViewAttendance from \"./attendence/ViewAttendance\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const { accessToken } = useSelector((state) => {\n    return {\n      accessToken: state.accessToken,\n    };\n  });\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [drawerItem, setDrawerItem] = React.useState(\"ViewAttendance\");\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  // React.useEffect(() => {\n  //   const func = async () => {\n  //     await getClassRooms();\n  //   };\n  //   func();\n  // }, []);\n  React.useEffect(() => {\n    const func = async () => {\n      await getAllStudent();\n    };\n    func();\n  }, []);\n\n  const getAllStudent = async () => {\n    let data = await fetch(\"http://localhost:2000/api/getAllStudents\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data)\n      .catch((err) => console.log(err));\n    console.log(data);\n    dispatch({ type: \"GETSTUDENT\", payload: data });\n  };\n  // const getClassRooms = async () => {\n  //   let data = await fetch(\"http://localhost:2000/api/getAllClassRoom\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: \"Bearer \" + accessToken,\n  //     },\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => data)\n  //     .catch((err) => console.log(err));\n  //   console.log(data);\n  //   dispatch({ type: \"GETCLASSROOM\", payload: data });\n  // };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Menu\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button onClick={() => setDrawerItem(\"ViewAttendance\")}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Check Attendence\"} />\n          </ListItem>\n        </List>\n        <List>\n          <ListItem button onClick={() => setDrawerItem(\"ViewStudentsLogs\")}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Check Students Logs\"} />\n          </ListItem>\n        </List>\n        <Divider />\n        <Typography style={{ textAlign: \"center\", marginTop: 20 }}>\n          Settings\n        </Typography>\n        <List>\n          <ListItem button onClick={() => setDrawerItem(\"Students\")}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Add / View Students\"} />\n          </ListItem>\n          {/* <ListItem button onClick={() => setDrawerItem(\"classRoom\")}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Add / View Class Rooms\"} />\n          </ListItem> */}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {(drawerItem === \"Students\" && <AddStudent />) ||\n          (drawerItem === \"ViewAttendance\" && <ViewAttendance />) ||\n          (drawerItem === \"ViewStudentsLogs\" && <ViewStudentsLogs />)}\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignIn from \"./Components/auth/signin\";\nimport SignUp from \"./Components/auth/signup\";\nimport Home from \"./Components/home\";\nimport socketCon from \"./socket/socket\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { user, accessToken } = useSelector((state) => {\n    return {\n      user: state.user,\n      accessToken: state.accessToken,\n    };\n  });\n  React.useEffect(() => {\n    socketCon.emit(\"hello World\");\n    socketCon.on(\"hello\", () => {\n      console.log(\"hi!\");\n    });\n  });\n  React.useEffect(() => {\n    const getUSERJSON = localStorage.getItem(\"user\") || {};\n    const getAccessToken = localStorage.getItem(\"auth\");\n    console.log(getAccessToken);\n    let userObject = [];\n    try {\n      userObject = JSON.parse(getUSERJSON);\n    } catch (e) {\n      console.log(e);\n    }\n    dispatch({\n      type: \"SIGNIN\",\n      payload: { user: userObject, asscessToken: getAccessToken },\n    });\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        {/* <Route path=\"/signin\" component={SignIn} /> */}\n        <Route path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/\" component={!user || !user.name ? SignIn : Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state, action) => {\n  switch (action.type) {\n    case \"SIGNIN\":\n      console.log(\"reducer\", action.payload);\n      return {\n        ...state,\n        user: action.payload.user,\n        accessToken: action.payload.asscessToken,\n      };\n    case \"SIGNOUT\":\n      return {\n        ...state,\n        user: action.payload,\n        accessToken: action.payload,\n      };\n    case \"ADDCLASSROOM\":\n      return {\n        ...state,\n        classRoom: [...state.classRoom, action.payload.data],\n      };\n    case \"GETCLASSROOM\":\n      console.log(action.payload);\n      return {\n        ...state,\n        classRoom: action.payload.data,\n      };\n    case \"ADDSTUDENT\":\n      return {\n        ...state,\n        students: [...state.students, action.payload.data],\n      };\n    case \"GETSTUDENT\":\n      return {\n        ...state,\n        students: action.payload.data,\n      };\n    case \"DELETEDATA\":\n      return {\n        ...state,\n        students: state.students.filter(\n          (data) => data.id !== action.payload && data\n        ),\n      };\n    case \"GETATTENDENCE\":\n      return {\n        ...state,\n        attendence: action.payload.data,\n      };\n    case \"GETALLLOGS\":\n      return {\n        ...state,\n        studentsLogs: action.payload.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport Reducer from \"./store/reducer\";\n\n// For Middleware\nconst middleWare = [thunk];\n// Initial State\nconst initialState = {\n  user: [],\n  accessToken: \"\",\n  classRoom: [],\n  students: [],\n  attendence: [],\n  studentsLogs: [],\n};\n// Compose\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Store Created\nconst store = createStore(\n  Reducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}